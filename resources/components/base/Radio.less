@import './../../sd-base-variables.less';
@import './mixins/BinaryInput.less';

.sd-radio {
	.sd-mixin-binary-input();

	// Custom-styled radio that's visible to the user.
	&__icon {
		border-radius: 100%;

		// Needed for `:focus` state's inner white circle
		&:before {
			border: @border-width-base @border-style-base transparent;
			border-radius: 100%;
			// `px` unit due to pixel rounding error when using
			// `@sd-size-input-binary / 4`
			bottom: -4px;
			content: ' ';
			left: -4px;
			position: absolute;
			right: -4px;
			top: -4px;
		}
	}

	// HTML input with type=radio.
	&__input {
		// Note: there is no focus behavior for the input in its unchecked
		// state because you can't focus on it without selecting it.
		&:hover + .sd-radio__icon {
			border-color: @sd-border-color-framed-progressive--hover;
		}

		&:active + .sd-radio__icon {
			background-color: @sd-background-color-input-binary--active;
			border-color: @sd-border-color-input-binary--active;
		}

		&:checked + .sd-radio__icon {
			border-color: @sd-border-color-input-binary--checked;
			border-width: @sd-border-width-radio--checked;
		}

		&:disabled {
			cursor: @cursor-base--disabled;

			& + .sd-radio__icon {
				background-color: @background-color-filled--disabled;
				border-color: @border-color-base--disabled;
				cursor: @cursor-base--disabled;
			}

			& ~ .sd-radio__label-text {
				color: @color-base--disabled;
			}

			&:checked + .sd-radio__icon {
				background-color: @background-color-base;
			}
		}

		&:checked:enabled {
			// `:focus` has to come first, otherwise a specificity race with
			// :hover:focus` etc is necessary
			&:focus + .sd-radio__icon {
				&:before {
					border-color: @background-color-base;
				}
			}

			&:hover + .sd-radio__icon {
				border-color: @sd-border-color-framed-progressive--hover;
			}

			&:active + .sd-radio__icon {
				border-color: @sd-border-color-input-binary--active;
				box-shadow: @sd-box-shadow-input-binary--active;

				&:before {
					border-color: @sd-border-color-input-binary--active;
				}
			}
		}
	}
}
